input {
	tcp {
		port => 4560
		codec => json_lines
	}
}

filter {
	if [level_value] <= 30000 { # <= WARN
		if "RChain Node" in [message] {
			mutate {
				add_field => { "status" => 0 }
			}
		} else {
			drop {}
		}
	} else if "Got response: message dropped" in [message] {
		drop {}
	} else {
		mutate {
			add_field => { "status" => 2 }
		}
	}

	mutate {
		gsub => [
			"host", "^[^\.]*-(node\d+).*$", "\1.testnet.rchain-dev.tk"
		]
	}

	if [stack_trace] {
		ruby {
			code => 'event.set("nagios_output", event.get("message") + "\\nException: " + event.get("stack_trace").gsub(/\n.*/, ""))'
		}
	} else {
		mutate {
			copy => { "message" => "nagios_output" }
		}
	}
}

output {
	http {
		url => "http://nagios.c.developer-222401.internal:6315/submit_result"
		http_method => "post"
		format => "json"
		mapping => {
			"host" => "%{host}"
			"service" => "errors-in-log"
			"status" => "%{status}"
			"output" => "%{nagios_output}"
		}
	}
}
